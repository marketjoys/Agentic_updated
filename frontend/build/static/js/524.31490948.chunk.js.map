{"version":3,"file":"static/js/524.31490948.chunk.js","mappings":"0KAEA,MAAMA,EAAeC,yEAEfC,EAAMC,EAAAA,EAAMC,OAAO,CACvBC,QAASL,EACTM,QAAS,CACP,eAAgB,sBAKpBJ,EAAIK,aAAaC,QAAQC,IACtBC,IAAY,IAADC,EACVC,QAAQC,IAAI,eAA6B,QAAfF,EAAED,EAAOI,cAAM,IAAAH,OAAA,EAAbA,EAAeI,cAAeL,EAAOM,KAGjE,MAAMC,EAAQC,aAAaC,QAAQ,SAKnC,OAJIF,IACFP,EAAOJ,QAAuB,cAAI,UAAUW,KAGvCP,GAERU,GACQC,QAAQC,OAAOF,IAK1BlB,EAAIK,aAAagB,SAASd,IACvBc,GACQA,EAETC,UAAkB,IAADC,EAAAC,EAIf,GAHAd,QAAQQ,MAAM,cAA4B,QAAdK,EAAAL,EAAMG,gBAAQ,IAAAE,OAAA,EAAdA,EAAgBE,OAAQP,EAAMQ,SAG3B,OAAb,QAAdF,EAAAN,EAAMG,gBAAQ,IAAAG,OAAA,EAAdA,EAAgBG,QAAgB,CAClCjB,QAAQC,IAAI,mDAEZ,GADcK,aAAaC,QAAQ,SAEjC,IACE,MAAMW,QAAwB3B,EAAAA,EAAM4B,KAAK,GAAG/B,uBACtC,aAAEgC,GAAiBF,EAAgBH,KAEzCT,aAAae,QAAQ,QAASD,GAG9B,MAAME,EAAkBd,EAAMV,OAG9B,OAFAwB,EAAgB5B,QAAuB,cAAI,UAAU0B,KAE9C7B,EAAAA,EAAAA,GAAM+B,EACf,CAAE,MAAOC,GACPvB,QAAQQ,MAAM,wBAAyBe,GACvCjB,aAAakB,WAAW,SACxBC,OAAOC,SAASC,KAAO,GACzB,CAEJ,CAEA,OAAOlB,QAAQC,OAAOF,KAKnB,MAAMoB,EAAa,CAExBC,YAAaA,IAAMvC,EAAIwC,IAAI,eAG3BC,aAAc,eAACC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAG,OAClC3C,EAAIwC,IAAI,uBAAuBE,WAAcI,IAAQ,EACvDC,eAAiBC,GAAahD,EAAI6B,KAAK,iBAAkBmB,GACzDC,gBAAkBC,IAChB,MAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,OAAQH,GACjBlD,EAAI6B,KAAK,wBAAyBsB,EAAU,CACjD/C,QAAS,CACP,eAAgB,0BAMtBkD,aAAcA,IAAMtD,EAAIwC,IAAI,kBAC5Be,eAAiBC,GAAaxD,EAAI6B,KAAK,iBAAkB2B,GACzDC,YAAcC,GAAO1D,EAAIwC,IAAI,kBAAkBkB,KAC/CC,eAAgBA,CAACD,EAAIF,IAAaxD,EAAI4D,IAAI,kBAAkBF,IAAMF,GAGlEK,aAAcA,IAAM7D,EAAIwC,IAAI,kBAC5BsB,eAAiBC,GAAa/D,EAAI6B,KAAK,iBAAkBkC,GACzDC,YAAcN,GAAO1D,EAAIwC,IAAI,kBAAkBkB,KAC/CO,aAAc,SAACP,GAA0B,IAAtBQ,EAAWvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChCjC,QAAQC,IAAI,4CAAmC+C,EAAI,eAAgBQ,GAGnE,MAYMC,EAAmB,CAXvBC,kBAAkB,EAClBC,kBAAmB,GACnBC,WAAY,IACZC,cAAe,YACfC,WAAY,KACZC,mBAAmB,EACnBC,oBAAqB,CAAC,EAAG,EAAG,IAC5BC,oBAAqB,MAI8BT,GAKrD,OAHAxD,QAAQC,IAAI,mCAA0BwD,GACtCzD,QAAQC,IAAI,uCAA8B,kBAAkB+C,UAErD1D,EAAI6B,KAAK,kBAAkB6B,SAAWS,EAC/C,EAGAS,WAAYA,IAAM5E,EAAIwC,IAAI,gBAC1BqC,aAAeC,GAAW9E,EAAI6B,KAAK,eAAgBiD,GACnDC,UAAYrB,GAAO1D,EAAIwC,IAAI,gBAAgBkB,KAC3CsB,aAAcA,CAACtB,EAAIoB,IAAW9E,EAAI4D,IAAI,gBAAgBF,IAAMoB,GAC5DG,aAAevB,GAAO1D,EAAIkF,OAAO,gBAAgBxB,KAGjDyB,qBAAuBC,GAAepF,EAAIwC,IAAI,2BAA2B4C,KAGzEC,SAAUA,IAAMrF,EAAIwC,IAAI,cACxB8C,WAAaC,GAASvF,EAAI6B,KAAK,aAAc0D,GAC7CC,QAAU9B,GAAO1D,EAAIwC,IAAI,cAAckB,KACvC+B,WAAYA,CAAC/B,EAAI6B,IAASvF,EAAI4D,IAAI,cAAcF,IAAM6B,GACtDG,WAAahC,GAAO1D,EAAIkF,OAAO,cAAcxB,KAC7CiC,mBAAoBA,CAACC,EAAQC,IAAgB7F,EAAI6B,KAAK,cAAc+D,cAAoB,CAAEE,aAAcD,IACxGE,wBAAyBA,CAACH,EAAQC,IAAgB7F,EAAIkF,OAAO,cAAcU,cAAoB,CAAEnE,KAAM,CAAEqE,aAAcD,KAGvHG,qBAAsBA,IAAMhG,EAAI6B,KAAK,+BACrCoE,oBAAqBA,IAAMjG,EAAI6B,KAAK,8BACpCqE,oBAAqBA,IAAMlG,EAAIwC,IAAI,gCACnC2D,uBAAwBA,IAAMnG,EAAIwC,IAAI,mCACtC4D,yBAA2B3E,GAASzB,EAAI6B,KAAK,4CAA6CJ,GAC1F4E,uBAAyB5E,GAASzB,EAAI6B,KAAK,sCAAuCJ,GAGlF6E,WAAYA,IAAMtG,EAAIwC,IAAI,gBAC1B+D,UAAY7C,GAAO1D,EAAIwC,IAAI,gBAAgBkB,KAC3C8C,oBAAsBC,GAAezG,EAAIwC,IAAI,yBAAyBiE,KACtEC,mBAAoBA,CAACC,EAAUC,IAAgB5G,EAAI6B,KAAK,gBAAgB8E,aAAqBC,GAG7FC,kBAAmBA,IAAM7G,EAAIwC,IAAI,wBACjCsE,oBAAsBC,GAAa/G,EAAI6B,KAAK,uBAAwBkF,GACpEC,oBAAqBA,CAACtD,EAAIqD,IAAa/G,EAAI4D,IAAI,wBAAwBF,IAAMqD,GAC7EE,oBAAsBvD,GAAO1D,EAAIkF,OAAO,wBAAwBxB,KAChEwD,wBAA0BxD,GAAO1D,EAAI6B,KAAK,wBAAwB6B,iBAClEyD,kBAAoBzD,GAAO1D,EAAI6B,KAAK,wBAAwB6B,qBAG5D0D,qBAAsBA,IAAMpH,EAAIwC,IAAI,uCACpC6E,kBAAmBA,IAAMrH,EAAIwC,IAAI,8CACjC8E,YAAa,eAACC,EAAK5E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAAK3C,EAAIwC,IAAI,6CAA6C+E,IAAQ,EAC1FC,qBAAsB,eAACC,EAAI9E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAC,OAAK3C,EAAIwC,IAAI,qDAAqDiF,IAAO,EACxGC,sBAAwBjB,GAAezG,EAAIwC,IAAI,6CAA6CiE,KAC5FkB,kBAAoBlB,GAAezG,EAAI6B,KAAK,kDAAkD4E,KAC9FmB,gBAAkBnB,GAAezG,EAAI6B,KAAK,+CAA+C4E,KACzFoB,uBAAwBA,IAAM7H,EAAIwC,IAAI,0CAGtCsF,oBAAqBA,IAAM9H,EAAI6B,KAAK,+BACpCkG,mBAAoBA,IAAM/H,EAAI6B,KAAK,8BACnCmG,wBAAyBA,IAAMhI,EAAIwC,IAAI,gCACvCyF,sBAAuBA,IAAMjI,EAAIwC,IAAI,oCACrC0F,qBAAuBC,GAAiBnI,EAAI6B,KAAK,yCAA0CsG,IAG7F,G,oOC7KA,MAAMC,GAAiBC,EAAAA,EAAAA,YAAW,CAAAC,EAAmEC,KAAS,IAA3E,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,EAAW,UAAEC,EAAS,UAAEC,KAAcC,GAAOP,EACjG,MAAMQ,GAAWC,EAAAA,EAAAA,QAAO,MAwCxB,OAhBAC,EAAAA,EAAAA,WAAU,KACR,GAAIF,EAASG,SAAWN,EAAW,CACjC,MAAMO,EAASJ,EAASG,QAAQE,YAC1BC,EAAiBC,IACrBV,EAAUU,IAIZ,OAFAH,EAAOI,KAAKC,iBAAiB,UAAWH,GAEjC,KACDF,GAAUA,EAAOI,MACnBJ,EAAOI,KAAKE,oBAAoB,UAAWJ,GAGjD,GACC,CAACT,KAGFc,EAAAA,EAAAA,KAAA,OAAKb,UAAWA,EAAUc,UACxBD,EAAAA,EAAAA,KAACE,IAAU,CACTpB,IAAMqB,IACJd,EAASG,QAAUW,EACfrB,IACiB,oBAARA,EACTA,EAAIqB,GAEJrB,EAAIU,QAAUW,IAIpBC,MAAM,OACNrB,MAAOA,EACPC,SAAUA,EACVC,YAAaA,EACboB,QAtDU,CACdC,QAAS,CACP,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAChC,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,KAAQ,WAAY,CAAE,KAAQ,WACjC,CAAC,CAAE,OAAU,MAAO,CAAE,OAAU,OAChC,CAAC,CAAE,MAAS,KACZ,CAAC,OAAQ,SACT,CAAC,aAAc,cACf,CAAC,WA6CCC,QAzCU,CACd,SAAU,OAAQ,SAAU,YAAa,SACzC,QAAS,aAAc,OAAQ,SAAU,SACzC,QAAS,OAAQ,QAAS,aAAc,cAuCpCC,MAAO,CACLC,OAAQ,QACRC,aAAc,WAEZtB,QAMZT,EAAegC,YAAc,iBAE7B,UC8jBA,EApoB2B9B,IAA4C,IAA3C,OAAE+B,EAAM,QAAEC,EAAO,SAAE9G,EAAQ,OAAE+G,GAAQjC,GAE/DkC,EAAAA,EAAAA,GAAaF,EAASD,GAEtB,MAAOI,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,SACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,CAC/CK,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,aAAc,GACdC,KAAM,QACNC,iBAAiB,EACjBC,eAAgB,CACdC,aAAc,UACdC,gBAAiB,UACjBC,UAAW,UACXC,KAAM,oBACNC,aAAc,UAIXC,EAAaC,IAAkBlB,EAAAA,EAAAA,UAAS,KAE/C3B,EAAAA,EAAAA,WAAU,KACO,IAAD8C,EAAAC,EAAAC,EAAAC,EAAAC,EAAV1I,EACFuH,EAAgB,CACdC,KAAMxH,EAASwH,MAAQ,GACvBC,QAASzH,EAASyH,SAAW,GAC7BC,QAAS1H,EAAS0H,SAAW,GAC7BC,aAAc3H,EAAS2H,cAAgBgB,EAAyB3I,EAAS0H,SAAW,IACpFE,KAAM5H,EAAS4H,MAAQ,QACvBC,iBAA8C,IAA7B7H,EAAS6H,gBAC1BC,eAAgB,CACdC,cAAqC,QAAvBO,EAAAtI,EAAS8H,sBAAc,IAAAQ,OAAA,EAAvBA,EAAyBP,eAAgB,UACvDC,iBAAwC,QAAvBO,EAAAvI,EAAS8H,sBAAc,IAAAS,OAAA,EAAvBA,EAAyBP,kBAAmB,UAC7DC,WAAkC,QAAvBO,EAAAxI,EAAS8H,sBAAc,IAAAU,OAAA,EAAvBA,EAAyBP,YAAa,UACjDC,MAA6B,QAAvBO,EAAAzI,EAAS8H,sBAAc,IAAAW,OAAA,EAAvBA,EAAyBP,OAAQ,oBACvCC,cAAqC,QAAvBO,EAAA1I,EAAS8H,sBAAc,IAAAY,OAAA,EAAvBA,EAAyBP,eAAgB,SAK3DZ,EAAgB,CACdC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,aAAciB,IACdhB,KAAM,QACNC,iBAAiB,EACjBC,eAAgB,CACdC,aAAc,UACdC,gBAAiB,UACjBC,UAAW,UACXC,KAAM,oBACNC,aAAc,UAInB,CAACnI,EAAU6G,KAEdrB,EAAAA,EAAAA,WAAU,KACJ8B,EAAaO,iBACfQ,EAAef,EAAaK,eAE7B,CAACL,EAAaK,aAAcL,EAAaO,kBAE5C,MAAMe,EAAyBA,IACtB,qmEAqHHD,EAA4BE,GAC3BA,EAEE,kOAQgBvB,EAAaQ,eAAeI,4DAElCZ,EAAaQ,eAAeG,4OAQjBX,EAAaQ,eAAeE,gDAC/BV,EAAaQ,eAAeK,iKAKzBb,EAAaQ,eAAeC,qIAI/BT,EAAaQ,eAAeK,gBAAgBb,EAAaQ,eAAeK,0GAGvEb,EAAaQ,eAAeG,0IAI1BX,EAAaQ,eAAeC,yVASGT,EAAaQ,eAAeG,0NAS7EY,uQAvDmBD,IAiEzBE,EAAoBA,CAACC,EAAO/D,KAChCuC,EAAgByB,IAAI,IACfA,EACH,CAACD,GAAQ/D,MAIPiE,EAAoBA,CAACF,EAAO/D,KAChCuC,EAAgByB,IAAI,IACfA,EACHlB,eAAgB,IACXkB,EAAKlB,eACR,CAACiB,GAAQ/D,MAKbkE,KAGIA,EAAuBA,KAC3B,MAAM,aAAEnB,EAAY,gBAAEC,EAAe,UAAEC,EAAS,KAAEC,EAAI,aAAEC,GAAiBb,EAAaQ,eAGtF,IAAIqB,EAAc7B,EAAaK,aAG/BwB,EAAcA,EAAYC,QAAQ,0BAA2B,UAAUnB,KACvEkB,EAAcA,EAAYC,QAAQ,qCAAsC,qBAAqBpB,KAC7FmB,EAAcA,EAAYC,QAAQ,sBAAuB,gBAAgBlB,KACzEiB,EAAcA,EAAYC,QAAQ,wBAAyB,kBAAkBjB,KAE7EZ,EAAgByB,IAAI,IACfA,EACHrB,aAAcwB,MAwCZE,EAAuBC,IAC3B,MAAMC,EAAUC,SAASC,cAAc,OAEvC,OADAF,EAAQG,UAAYJ,EACbC,EAAQI,aAAeJ,EAAQK,WAAa,IA0BrD,IAAK/C,EAAQ,OAAO,KAMpB,OACEZ,EAAAA,EAAAA,KAAA,OAAKb,UAAU,iFAAgFc,UAC7F2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yEAAwEc,SAAA,EAErF2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iDAAgDc,SAAA,EAC7D2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,8BAA6Bc,SAAA,EAC1CD,EAAAA,EAAAA,KAAC6D,EAAAA,EAAI,CAAC1E,UAAU,2BAChBa,EAAAA,EAAAA,KAAA,MAAIb,UAAU,qBAAoBc,SAC/BlG,EAAW,gBAAkB,mCAGlCiG,EAAAA,EAAAA,KAAA,UACE8D,QAASjD,EACT1B,UAAU,mCAAkCc,UAE5CD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAC,CAAC5E,UAAU,kBAKjByE,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,cAAac,SAAA,EAE1B2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,qCAAoCc,SAAA,EAEjD2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iBAAgBc,SAAA,EAC7B2D,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,+CAA8Cc,SAAC,qBAGhED,EAAAA,EAAAA,KAAA,SACE2B,KAAK,OACL5C,MAAOsC,EAAaE,KACpBvC,SAAWgF,GAAMnB,EAAkB,OAAQmB,EAAEC,OAAOlF,OACpDI,UAAU,+GACVF,YAAY,+BAIhB2E,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,+CAA8Cc,SAAC,oBAGhED,EAAAA,EAAAA,KAAA,SACE2B,KAAK,OACL5C,MAAOsC,EAAaG,QACpBxC,SAAWgF,GAAMnB,EAAkB,UAAWmB,EAAEC,OAAOlF,OACvDI,UAAU,+GACVF,YAAY,8BAIhB2E,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,+CAA8Cc,SAAC,mBAGhE2D,EAAAA,EAAAA,MAAA,UACE7E,MAAOsC,EAAaM,KACpB3C,SAAWgF,GAAMnB,EAAkB,OAAQmB,EAAEC,OAAOlF,OACpDI,UAAU,+GAA8Gc,SAAA,EAExHD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,QAAOkB,SAAC,oBACtBD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,YAAWkB,SAAC,eAC1BD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,gBAAekB,SAAC,4BAMpC2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,mCAAkCc,SAAA,EAC/CD,EAAAA,EAAAA,KAAA,SACE2B,KAAK,WACLuC,QAAS7C,EAAaO,gBACtB5C,SAAWgF,GAAMnB,EAAkB,kBAAmBmB,EAAEC,OAAOC,SAC/D/E,UAAU,mCAEZa,EAAAA,EAAAA,KAAA,SAAOb,UAAU,oCAAmCc,SAAC,wBAGnDoB,EAAaO,iBAAmBP,EAAaI,UAC7CzB,EAAAA,EAAAA,KAAA,UACE8D,QAvJUK,KACxB,MAAMC,EAAc1B,EAAyBrB,EAAaI,SAC1DH,EAAgByB,IAAI,IACfA,EACHrB,aAAc0C,EACdxC,iBAAiB,KAEnByC,EAAAA,GAAMC,QAAQ,oCAiJAnF,UAAU,4CAA2Cc,SACtD,wBAOL2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,OAAMc,SAAA,EACnB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yCAAwCc,SAAA,EACrDD,EAAAA,EAAAA,KAAA,SAAOb,UAAU,0CAAyCc,SACvDoB,EAAaO,gBAAkB,mBAAqB,kBAEvDgC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iBAAgBc,SAAA,EAC7B2D,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAM7C,EAAa,QAC5B9B,UAAW,8BACK,SAAd6B,EACI,yBACA,+CACHf,SAAA,EAEHD,EAAAA,EAAAA,KAACuE,EAAAA,EAAI,CAACpF,UAAU,wBAAwB,UAGzCkC,EAAaO,kBACZ5B,EAAAA,EAAAA,KAAA,UACE8D,QAASA,IAAM1C,GAAgBD,GAC/BhC,UAAU,wEAAuEc,SAEhFkB,GAAcnB,EAAAA,EAAAA,KAACwE,EAAAA,EAAM,CAACrF,UAAU,aAAea,EAAAA,EAAAA,KAACyE,EAAAA,EAAG,CAACtF,UAAU,oBAMtEkC,EAAaO,iBACZ5B,EAAAA,EAAAA,KAACrB,EAAc,CACbI,MAAOsC,EAAaK,aACpB1C,SAAWD,IACT8D,EAAkB,eAAgB9D,GAElCkE,KAEF/D,UAAY8E,IAEI,WAAVA,EAAEU,KACJV,EAAEW,mBAGN1F,YAAY,mFACZE,UAAU,qDAGZa,EAAAA,EAAAA,KAACrB,EAAc,CACbI,MAAOsC,EAAaI,QACpBzC,SAAWD,GAAU8D,EAAkB,UAAW9D,GAClDG,UAAY8E,IAEI,WAAVA,EAAEU,KACJV,EAAEW,mBAGN1F,YAAY,8EACZE,UAAU,0CAMhByE,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,OAAMc,SAAA,EACnBD,EAAAA,EAAAA,KAAA,SAAOb,UAAU,+CAA8Cc,SAAC,0BAGhED,EAAAA,EAAAA,KAAA,OAAKb,UAAU,yBAAwBc,SA/JvB,CAC1B,aAAc,YAAa,UAAW,YAAa,WAAY,SA+J9B2E,IAAKC,IACxB7E,EAAAA,EAAAA,KAAA,UAEE8D,QAASA,IA5LOe,KAChC,MAAMC,EAAWvB,SAASwB,cAAc,uCACxC,GAAID,EAAU,CACZ,MAAME,EAAQF,EAASG,eACjBC,EAAMJ,EAASK,aACfC,EAAON,EAAS/F,MAChBsG,EAASD,EAAKE,UAAU,EAAGN,GAC3BO,EAAQH,EAAKE,UAAUJ,GAEvBM,EAAUH,EAAS,KAAKR,MAAUU,EACxCjE,EAAgByB,IAAI,IACfA,EACHrB,aAAc8D,KAIhBC,WAAW,KACTX,EAASY,QACTZ,EAASa,kBAAkBX,EAAQH,EAAI1L,OAAS,EAAG6L,EAAQH,EAAI1L,OAAS,IACvE,EACL,GAwK+ByM,CAAyBf,GACxC1F,UAAU,iEAAgEc,SAEzE,KAAK4E,OAJDA,SAWZxD,EAAaO,kBACZgC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,OAAMc,SAAA,EACnB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,mCAAkCc,SAAA,EAC/CD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAO,CAAC1G,UAAU,2BACnBa,EAAAA,EAAAA,KAAA,MAAIb,UAAU,oCAAmCc,SAAC,uBAEpD2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yBAAwBc,SAAA,EACrC2D,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,mCAAkCc,SAAC,mBACpDD,EAAAA,EAAAA,KAAA,SACE2B,KAAK,QACL5C,MAAOsC,EAAaQ,eAAeC,aACnC9C,SAAWgF,GAAMhB,EAAkB,eAAgBgB,EAAEC,OAAOlF,OAC5DI,UAAU,mDAGdyE,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,mCAAkCc,SAAC,sBACpDD,EAAAA,EAAAA,KAAA,SACE2B,KAAK,QACL5C,MAAOsC,EAAaQ,eAAeE,gBACnC/C,SAAWgF,GAAMhB,EAAkB,kBAAmBgB,EAAEC,OAAOlF,OAC/DI,UAAU,mDAGdyE,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,mCAAkCc,SAAC,gBACpDD,EAAAA,EAAAA,KAAA,SACE2B,KAAK,QACL5C,MAAOsC,EAAaQ,eAAeG,UACnChD,SAAWgF,GAAMhB,EAAkB,YAAagB,EAAEC,OAAOlF,OACzDI,UAAU,mDAGdyE,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOb,UAAU,mCAAkCc,SAAC,iBACpD2D,EAAAA,EAAAA,MAAA,UACE7E,MAAOsC,EAAaQ,eAAeI,KACnCjD,SAAWgF,GAAMhB,EAAkB,OAAQgB,EAAEC,OAAOlF,OACpDI,UAAU,0DAAyDc,SAAA,EAEnED,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,oBAAmBkB,SAAC,WAClCD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,wBAAuBkB,SAAC,eACtCD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,iBAAgBkB,SAAC,aAC/BD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,yBAAwBkB,SAAC,qBACvCD,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,sBAAqBkB,SAAC,4BAShD2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,uBAAsBc,SAAA,EACnC2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yCAAwCc,SAAA,EACrDD,EAAAA,EAAAA,KAAA,MAAIb,UAAU,oCAAmCc,SAAC,aAClDD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,wBAAuBc,SACnCoB,EAAaO,gBAAkB,eAAiB,qBAIrD5B,EAAAA,EAAAA,KAAA,OAAKb,UAAU,kEAAiEc,SAC7EoB,EAAaO,iBAAmBT,GAC/BnB,EAAAA,EAAAA,KAAA,UACE8F,OAAQ3D,EACRhD,UAAU,gBACV4G,MAAM,mBAGRnC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,MAAKc,SAAA,EAClB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yDAAwDc,SAAA,EACrED,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,aAAiB,IAAEoB,EAAaG,SAAW,iBAErDxB,EAAAA,EAAAA,KAAA,OAAKb,UAAU,4CAA2Cc,SACvDoB,EAAaO,gBACVwB,EAAoB/B,EAAaK,cACjCL,EAAaI,SAAW,2BAUxCmC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iDAAgDc,SAAA,EAC7DD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,wBAAuBc,SACnCoB,EAAaO,gBACZ,qCACA,yBAGJgC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iBAAgBc,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,UACE8D,QAASjD,EACT1B,UAAU,6EAA4Ec,SACvF,YAGD2D,EAAAA,EAAAA,MAAA,UACEE,QA5UOjM,UACjB,IACE,IAAKwJ,EAAaE,KAAKyE,OAErB,YADA3B,EAAAA,GAAM5M,MAAM,gCAId,IAAK4J,EAAaG,QAAQwE,OAExB,YADA3B,EAAAA,GAAM5M,MAAM,+BAId,MAAMwO,EAAW,IACZ5E,EACHI,QAASJ,EAAaI,SAAW2B,EAAoB/B,EAAaK,qBAG9DZ,EAAOmF,GACb5B,EAAAA,GAAMC,QAAQ,YAAYvK,EAAW,UAAY,0BACjD8G,GACF,CAAE,MAAOpJ,GACPR,QAAQQ,MAAM,yBAA0BA,GACxC4M,EAAAA,GAAM5M,MAAM,0BACd,GAsTU0H,UAAU,4FAA2Fc,SAAA,EAErGD,EAAAA,EAAAA,KAACkG,EAAAA,EAAI,CAAC/G,UAAU,aAChBa,EAAAA,EAAAA,KAAA,QAAAC,SAAM,iCClfdkG,EAAetH,IAA2B,IAADuH,EAAA/D,EAAA,IAAzB,SAAEtI,EAAQ,OAAEsM,GAAQxH,EAWxC,OACEmB,EAAAA,EAAAA,KAAA,OAAKb,UAAU,OAAMc,UACnB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,YAAWc,SAAA,EACxB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yCAAwCc,SAAA,EACrD2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,8BAA6Bc,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,MAAIb,UAAU,2CAA0Cc,SAAElG,EAASwH,OAClExH,EAAS6H,kBACRgC,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,8BAA6Bc,SAAA,EAC1CD,EAAAA,EAAAA,KAACuE,EAAAA,EAAI,CAACpF,UAAU,6BAChBa,EAAAA,EAAAA,KAAA,QAAMb,UAAU,0BAAyBc,SAAC,gBAIhDD,EAAAA,EAAAA,KAAA,QAAMb,UAAW,kCAvBHwC,KACpB,OAAQA,GACN,IAAK,UAAW,MAAO,4BACvB,IAAK,YAAa,MAAO,8BACzB,IAAK,gBAAiB,MAAO,gCAC7B,IAAK,QAAS,MAAO,gCACrB,QAAS,MAAO,8BAiBuC2E,CAAavM,EAAS4H,QAAQ1B,UACjE,QAAbmG,EAAArM,EAAS4H,YAAI,IAAAyE,OAAA,EAAbA,EAAejD,QAAQ,IAAK,OAAQ,cAGzCnD,EAAAA,EAAAA,KAAA,KAAGb,UAAU,kCAAiCc,SAAElG,EAASyH,WACzDxB,EAAAA,EAAAA,KAAA,OAAKb,UAAU,kCAAiCc,UAC9CD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,2BAA0Bc,SACtClG,EAAS0H,QACR1H,EAAS0H,QAAQ6D,UAAU,EAAG,MAAQvL,EAAS0H,QAAQtI,OAAS,IAAM,MAAQ,IAC9E,0BAINyK,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,oCAAmCc,SAAA,EAChD2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,yDAAwDc,SAAA,EACrED,EAAAA,EAAAA,KAAA,QAAAC,SAAOlG,EAASwM,WAAa,IAAIC,KAAKzM,EAASwM,YAAYE,qBAAuB,kBAC1D,QAAvBpE,EAAAtI,EAAS8H,sBAAc,IAAAQ,OAAA,EAAvBA,EAAyBP,gBACxB8B,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,8BAA6Bc,SAAA,EAC1CD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAO,CAAC1G,UAAU,aACnBa,EAAAA,EAAAA,KAAA,OACEb,UAAU,8BACVqB,MAAO,CAAEuB,gBAAiBhI,EAAS8H,eAAeC,uBAK1D8B,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,iBAAgBc,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,UACE8D,QAASA,IAAMuC,EAAOtM,GACtBoF,UAAU,kEACV4G,MAAM,gBAAe9F,UAErBD,EAAAA,EAAAA,KAAC0G,EAAAA,EAAI,CAACvH,UAAU,eAElBa,EAAAA,EAAAA,KAAA,UACEb,UAAU,kEACV4G,MAAM,mBAAkB9F,UAExBD,EAAAA,EAAAA,KAACyE,EAAAA,EAAG,CAACtF,UAAU,cAEhBpF,EAAS6H,kBACR5B,EAAAA,EAAAA,KAAA,UACEb,UAAU,kEACV4G,MAAM,gBAAe9F,UAErBD,EAAAA,EAAAA,KAAC6D,EAAAA,EAAI,CAAC1E,UAAU,0BAUhC,EAxNkBwH,KAChB,MAAOC,EAAWC,IAAgB3F,EAAAA,EAAAA,UAAS,KACpC4F,EAASC,IAAc7F,EAAAA,EAAAA,WAAS,IAChC8F,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpCgG,EAAiBC,IAAsBjG,EAAAA,EAAAA,UAAS,OAEvD3B,EAAAA,EAAAA,WAAU,KACR6H,KACC,IAEH,MAAMA,EAAgBvP,UACpB,IACE,MAAMD,QAAiBiB,EAAAA,EAAWgB,eAClCgN,EAAajP,EAASI,KACxB,CAAE,MAAOP,GACP4M,EAAAA,GAAM5M,MAAM,2BACd,CAAC,QACCsP,GAAW,EACb,GAoBIM,EAAsBtN,IAC1BoN,EAAmBpN,GACnBkN,GAAa,IAQf,OAAIH,GAEA9G,EAAAA,EAAAA,KAAA,OAAKb,UAAU,wCAAuCc,UACpDD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,uEAMnByE,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,YAAWc,SAAA,EACxB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,oCAAmCc,SAAA,EAChDD,EAAAA,EAAAA,KAAA,MAAIb,UAAU,wCAAuCc,SAAC,qBACtD2D,EAAAA,EAAAA,MAAA,UACEE,QAlBkBwD,KACxBH,EAAmB,MACnBF,GAAa,IAiBP9H,UAAU,kBAAiBc,SAAA,EAE3BD,EAAAA,EAAAA,KAACuH,EAAAA,EAAI,CAACpI,UAAU,iBAAiB,sBAMrCyE,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,wCAAuCc,SAAA,EACpDD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,OAAMc,UACnBD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,YAAWc,UACxB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,oCAAmCc,SAAA,EAChD2D,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIb,UAAU,2CAA0Cc,SAAC,aACzDD,EAAAA,EAAAA,KAAA,KAAGb,UAAU,6BAA4Bc,SAAC,gCAE5CD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,oEAAmEc,UAChFD,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACrI,UAAU,oCAK5Ba,EAAAA,EAAAA,KAAA,OAAKb,UAAU,OAAMc,UACnBD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,YAAWc,UACxB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,oCAAmCc,SAAA,EAChD2D,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIb,UAAU,2CAA0Cc,SAAC,eACzDD,EAAAA,EAAAA,KAAA,KAAGb,UAAU,6BAA4Bc,SAAC,2BAE5CD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,qEAAoEc,UACjFD,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACrI,UAAU,qCAK5Ba,EAAAA,EAAAA,KAAA,OAAKb,UAAU,OAAMc,UACnBD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,YAAWc,UACxB2D,EAAAA,EAAAA,MAAA,OAAKzE,UAAU,oCAAmCc,SAAA,EAChD2D,EAAAA,EAAAA,MAAA,OAAA3D,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAIb,UAAU,2CAA0Cc,SAAC,mBACzDD,EAAAA,EAAAA,KAAA,KAAGb,UAAU,6BAA4Bc,SAAC,6BAE5CD,EAAAA,EAAAA,KAAA,OAAKb,UAAU,sEAAqEc,UAClFD,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACrI,UAAU,yCAQ9Ba,EAAAA,EAAAA,KAAA,OAAKb,UAAU,uDAAsDc,SAClE2G,EAAUhC,IAAK7K,IACdiG,EAAAA,EAAAA,KAACmG,EAAY,CAEXpM,SAAUA,EACVsM,OAAQgB,GAFHtN,EAASE,QAQpB+F,EAAAA,EAAAA,KAACyH,EAAkB,CACjB7G,OAAQoG,EACRjN,SAAUmN,EACVrG,QAASA,KACPoG,GAAa,GACbE,EAAmB,OAErBrG,OA9GqBjJ,UACzB,IACMqP,SACIrO,EAAAA,EAAWqB,eAAegN,EAAgBjN,GAAIoH,GACpDgD,EAAAA,GAAMC,QAAQ,yCAERzL,EAAAA,EAAWiB,eAAeuH,GAChCgD,EAAAA,GAAMC,QAAQ,kCAEhB2C,GAAa,GACbE,EAAmB,MACnBC,GACF,CAAE,MAAO3P,GACP4M,EAAAA,GAAM5M,MAAM,0BACd,Q,gDCvCJ,MAoBA,EApBqB,SAACiQ,GAAgC,IAAtBC,IAASzO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IACvCqG,EAAAA,EAAAA,WAAU,KACR,IAAKoI,EAAW,OAEhB,MAAMC,EAAmBhI,IACL,WAAdA,EAAM8E,MACR9E,EAAMiI,iBACNjI,EAAM+E,kBACN+C,MAMJ,OAFAnE,SAASzD,iBAAiB,UAAW8H,GAE9B,KACLrE,SAASxD,oBAAoB,UAAW6H,KAEzC,CAACF,EAAUC,GAChB,C","sources":["services/api.js","components/RichTextEditor.js","components/HTMLTemplateEditor.js","pages/Templates.js","hooks/useEscapeKey.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging and auth\napi.interceptors.request.use(\n  (config) => {\n    console.log('API Request:', config.method?.toUpperCase(), config.url);\n    \n    // Add auth token to all requests\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    \n    // If we get a 401 error, try to refresh the token\n    if (error.response?.status === 401) {\n      console.log('Received 401 error, attempting token refresh...');\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const refreshResponse = await axios.post(`${API_BASE_URL}/api/auth/refresh`);\n          const { access_token } = refreshResponse.data;\n          \n          localStorage.setItem('token', access_token);\n          \n          // Retry the original request with the new token\n          const originalRequest = error.config;\n          originalRequest.headers['Authorization'] = `Bearer ${access_token}`;\n          \n          return axios(originalRequest);\n        } catch (refreshError) {\n          console.error('Token refresh failed:', refreshError);\n          localStorage.removeItem('token');\n          window.location.href = '/'; // Redirect to login\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API methods\nexport const apiService = {\n  // Health check\n  healthCheck: () => api.get('/api/health'),\n\n  // Prospects\n  getProspects: (skip = 0, limit = 100) => \n    api.get(`/api/prospects?skip=${skip}&limit=${limit}`),\n  createProspect: (prospect) => api.post('/api/prospects', prospect),\n  uploadProspects: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/prospects/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  // Templates\n  getTemplates: () => api.get('/api/templates'),\n  createTemplate: (template) => api.post('/api/templates', template),\n  getTemplate: (id) => api.get(`/api/templates/${id}`),\n  updateTemplate: (id, template) => api.put(`/api/templates/${id}`, template),\n\n  // Campaigns\n  getCampaigns: () => api.get('/api/campaigns'),\n  createCampaign: (campaign) => api.post('/api/campaigns', campaign),\n  getCampaign: (id) => api.get(`/api/campaigns/${id}`),\n  sendCampaign: (id, sendRequest = {}) => {\n    console.log('📡 sendCampaign called with id:', id, 'sendRequest:', sendRequest);\n    \n    // Default send request parameters\n    const defaultSendRequest = {\n      send_immediately: true,\n      email_provider_id: \"\",\n      max_emails: 1000,\n      schedule_type: \"immediate\",\n      start_time: null,\n      follow_up_enabled: true,\n      follow_up_intervals: [3, 7, 14],\n      follow_up_templates: []\n    };\n    \n    // Merge with provided parameters\n    const finalSendRequest = { ...defaultSendRequest, ...sendRequest };\n    \n    console.log('📤 Final send request:', finalSendRequest);\n    console.log('🎯 Making POST request to:', `/api/campaigns/${id}/send`);\n    \n    return api.post(`/api/campaigns/${id}/send`, finalSendRequest);\n  },\n\n  // Intents\n  getIntents: () => api.get('/api/intents'),\n  createIntent: (intent) => api.post('/api/intents', intent),\n  getIntent: (id) => api.get(`/api/intents/${id}`),\n  updateIntent: (id, intent) => api.put(`/api/intents/${id}`, intent),\n  deleteIntent: (id) => api.delete(`/api/intents/${id}`),\n\n  // Analytics\n  getCampaignAnalytics: (campaignId) => api.get(`/api/analytics/campaign/${campaignId}`),\n\n  // Prospect Lists\n  getLists: () => api.get('/api/lists'),\n  createList: (list) => api.post('/api/lists', list),\n  getList: (id) => api.get(`/api/lists/${id}`),\n  updateList: (id, list) => api.put(`/api/lists/${id}`, list),\n  deleteList: (id) => api.delete(`/api/lists/${id}`),\n  addProspectsToList: (listId, prospectIds) => api.post(`/api/lists/${listId}/prospects`, { prospect_ids: prospectIds }),\n  removeProspectsFromList: (listId, prospectIds) => api.delete(`/api/lists/${listId}/prospects`, { data: { prospect_ids: prospectIds } }),\n\n  // Email Processing\n  startEmailProcessing: () => api.post('/api/email-processing/start'),\n  stopEmailProcessing: () => api.post('/api/email-processing/stop'),\n  getProcessingStatus: () => api.get('/api/email-processing/status'),\n  getProcessingAnalytics: () => api.get('/api/email-processing/analytics'),\n  testIntentClassification: (data) => api.post('/api/email-processing/test-classification', data),\n  testResponseGeneration: (data) => api.post('/api/email-processing/test-response', data),\n\n  // Threads\n  getThreads: () => api.get('/api/threads'),\n  getThread: (id) => api.get(`/api/threads/${id}`),\n  getThreadByProspect: (prospectId) => api.get(`/api/threads/prospect/${prospectId}`),\n  addMessageToThread: (threadId, messageData) => api.post(`/api/threads/${threadId}/messages`, messageData),\n\n  // Email Providers\n  getEmailProviders: () => api.get('/api/email-providers'),\n  createEmailProvider: (provider) => api.post('/api/email-providers', provider),\n  updateEmailProvider: (id, provider) => api.put(`/api/email-providers/${id}`, provider),\n  deleteEmailProvider: (id) => api.delete(`/api/email-providers/${id}`),\n  setDefaultEmailProvider: (id) => api.post(`/api/email-providers/${id}/set-default`),\n  testEmailProvider: (id) => api.post(`/api/email-providers/${id}/test-connection`),\n\n  // Follow-up Monitoring\n  getFollowUpDashboard: () => api.get('/api/follow-up-monitoring/dashboard'),\n  getImapScanStatus: () => api.get('/api/follow-up-monitoring/imap-scan-status'),\n  getImapLogs: (hours = 24) => api.get(`/api/follow-up-monitoring/imap-logs?hours=${hours}`),\n  getProspectResponses: (days = 7) => api.get(`/api/follow-up-monitoring/prospect-responses?days=${days}`),\n  analyzeProspectThread: (prospectId) => api.get(`/api/follow-up-monitoring/thread-analysis/${prospectId}`),\n  forceStopFollowUp: (prospectId) => api.post(`/api/follow-up-monitoring/force-stop-follow-up/${prospectId}`),\n  restartFollowUp: (prospectId) => api.post(`/api/follow-up-monitoring/restart-follow-up/${prospectId}`),\n  getFollowUpHealthCheck: () => api.get('/api/follow-up-monitoring/health-check'),\n\n  // Smart Follow-up Engine\n  startFollowUpEngine: () => api.post('/api/follow-up-engine/start'),\n  stopFollowUpEngine: () => api.post('/api/follow-up-engine/stop'),\n  getFollowUpEngineStatus: () => api.get('/api/follow-up-engine/status'),\n  getFollowUpStatistics: () => api.get('/api/follow-up-engine/statistics'),\n  processEmailResponse: (responseData) => api.post('/api/follow-up-engine/process-response', responseData),\n};\n\nexport default api;","import React, { useEffect, useRef, forwardRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst RichTextEditor = forwardRef(({ value, onChange, placeholder, onKeyDown, className, ...props }, ref) => {\n  const quillRef = useRef(null);\n\n  // Custom toolbar configuration\n  const modules = {\n    toolbar: [\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n      ['bold', 'italic', 'underline', 'strike'],\n      [{ 'color': [] }, { 'background': [] }],\n      [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n      [{ 'indent': '-1'}, { 'indent': '+1' }],\n      [{ 'align': [] }],\n      ['link', 'image'],\n      ['blockquote', 'code-block'],\n      ['clean']\n    ],\n  };\n\n  const formats = [\n    'header', 'bold', 'italic', 'underline', 'strike',\n    'color', 'background', 'list', 'bullet', 'indent',\n    'align', 'link', 'image', 'blockquote', 'code-block'\n  ];\n\n  // Handle key events (like Escape)\n  useEffect(() => {\n    if (quillRef.current && onKeyDown) {\n      const editor = quillRef.current.getEditor();\n      const handleKeyDown = (event) => {\n        onKeyDown(event);\n      };\n      editor.root.addEventListener('keydown', handleKeyDown);\n      \n      return () => {\n        if (editor && editor.root) {\n          editor.root.removeEventListener('keydown', handleKeyDown);\n        }\n      };\n    }\n  }, [onKeyDown]);\n\n  return (\n    <div className={className}>\n      <ReactQuill\n        ref={(el) => {\n          quillRef.current = el;\n          if (ref) {\n            if (typeof ref === 'function') {\n              ref(el);\n            } else {\n              ref.current = el;\n            }\n          }\n        }}\n        theme=\"snow\"\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        modules={modules}\n        formats={formats}\n        style={{\n          height: '300px',\n          marginBottom: '50px' // Space for toolbar\n        }}\n        {...props}\n      />\n    </div>\n  );\n});\n\nRichTextEditor.displayName = 'RichTextEditor';\n\nexport default RichTextEditor;","import React, { useState, useEffect } from 'react';\nimport { Eye, EyeOff, Code, Mail, Palette, Save, X } from 'lucide-react';\nimport { toast } from 'react-hot-toast';\nimport useEscapeKey from '../hooks/useEscapeKey';\nimport RichTextEditor from './RichTextEditor';\n\nconst HTMLTemplateEditor = ({ isOpen, onClose, template, onSave }) => {\n  // Add escape key functionality\n  useEscapeKey(onClose, isOpen);\n  \n  const [activeTab, setActiveTab] = useState('edit');\n  const [showPreview, setShowPreview] = useState(true);\n  const [templateData, setTemplateData] = useState({\n    name: '',\n    subject: '',\n    content: '',\n    html_content: '',\n    type: 'email',\n    is_html_enabled: true,\n    style_settings: {\n      primaryColor: '#3B82F6',\n      backgroundColor: '#FFFFFF',\n      textColor: '#1F2937',\n      font: 'Arial, sans-serif',\n      borderRadius: '8px'\n    }\n  });\n\n  const [htmlPreview, setHtmlPreview] = useState('');\n\n  useEffect(() => {\n    if (template) {\n      setTemplateData({\n        name: template.name || '',\n        subject: template.subject || '',\n        content: template.content || '',\n        html_content: template.html_content || generateHTMLFromRichText(template.content || ''),\n        type: template.type || 'email',\n        is_html_enabled: template.is_html_enabled !== false,\n        style_settings: {\n          primaryColor: template.style_settings?.primaryColor || '#3B82F6',\n          backgroundColor: template.style_settings?.backgroundColor || '#FFFFFF',\n          textColor: template.style_settings?.textColor || '#1F2937',\n          font: template.style_settings?.font || 'Arial, sans-serif',\n          borderRadius: template.style_settings?.borderRadius || '8px'\n        }\n      });\n    } else {\n      // Reset for new template\n      setTemplateData({\n        name: '',\n        subject: '',\n        content: '',\n        html_content: getDefaultHTMLTemplate(),\n        type: 'email',\n        is_html_enabled: true,\n        style_settings: {\n          primaryColor: '#3B82F6',\n          backgroundColor: '#FFFFFF',\n          textColor: '#1F2937',\n          font: 'Arial, sans-serif',\n          borderRadius: '8px'\n        }\n      });\n    }\n  }, [template, isOpen]);\n\n  useEffect(() => {\n    if (templateData.is_html_enabled) {\n      setHtmlPreview(templateData.html_content);\n    }\n  }, [templateData.html_content, templateData.is_html_enabled]);\n\n  const getDefaultHTMLTemplate = () => {\n    return `<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{subject}}</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            color: #1F2937;\n            background-color: #f9fafb;\n            margin: 0;\n            padding: 20px;\n        }\n        .email-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: #FFFFFF;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n            overflow: hidden;\n        }\n        .header {\n            background-color: #3B82F6;\n            color: white;\n            padding: 20px;\n            text-align: center;\n        }\n        .content {\n            padding: 30px;\n        }\n        .footer {\n            background-color: #F3F4F6;\n            padding: 20px;\n            text-align: center;\n            font-size: 12px;\n            color: #6B7280;\n        }\n        .button {\n            display: inline-block;\n            background-color: #3B82F6;\n            color: white;\n            padding: 12px 24px;\n            text-decoration: none;\n            border-radius: 6px;\n            margin: 20px 0;\n        }\n        h1, h2, h3 { color: #1F2937; }\n        p { margin-bottom: 16px; }\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n        <div class=\"header\">\n            <h1>Hello {{first_name}}!</h1>\n        </div>\n        <div class=\"content\">\n            <p>Write your email content here...</p>\n            <p>You can use personalization like:</p>\n            <ul>\n                <li>{{first_name}} - First name</li>\n                <li>{{last_name}} - Last name</li>\n                <li>{{company}} - Company name</li>\n                <li>{{job_title}} - Job title</li>\n                <li>{{industry}} - Industry</li>\n            </ul>\n        </div>\n        <div class=\"footer\">\n            <p>This email was sent to {{email}}</p>\n        </div>\n    </div>\n</body>\n</html>`;\n  };\n\n  const generateHTMLFromText = (textContent) => {\n    if (!textContent) return getDefaultHTMLTemplate();\n    \n    const paragraphs = textContent.split('\\n').filter(p => p.trim());\n    const htmlContent = paragraphs.map(p => `            <p>${p}</p>`).join('\\n');\n    \n    return `<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{subject}}</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            color: #1F2937;\n            background-color: #f9fafb;\n            margin: 0;\n            padding: 20px;\n        }\n        .email-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: #FFFFFF;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n        }\n        h1, h2, h3 { color: #1F2937; }\n        p { margin-bottom: 16px; }\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n${htmlContent}\n    </div>\n</body>\n</html>`;\n  };\n\n  const generateHTMLFromRichText = (richTextContent) => {\n    if (!richTextContent) return getDefaultHTMLTemplate();\n    \n    return `<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{subject}}</title>\n    <style>\n        body {\n            font-family: ${templateData.style_settings.font};\n            line-height: 1.6;\n            color: ${templateData.style_settings.textColor};\n            background-color: #f9fafb;\n            margin: 0;\n            padding: 20px;\n        }\n        .email-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: ${templateData.style_settings.backgroundColor};\n            border-radius: ${templateData.style_settings.borderRadius};\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n        }\n        .header {\n            background-color: ${templateData.style_settings.primaryColor};\n            color: white;\n            padding: 20px;\n            text-align: center;\n            border-radius: ${templateData.style_settings.borderRadius} ${templateData.style_settings.borderRadius} 0 0;\n            margin: -30px -30px 30px -30px;\n        }\n        h1, h2, h3 { color: ${templateData.style_settings.textColor}; }\n        p { margin-bottom: 16px; }\n        .button {\n            display: inline-block;\n            background-color: ${templateData.style_settings.primaryColor};\n            color: white;\n            padding: 12px 24px;\n            text-decoration: none;\n            border-radius: 6px;\n            margin: 20px 0;\n        }\n        .ql-editor { border: none; padding: 0; }\n        .ql-editor p { margin-bottom: 16px; }\n        .ql-editor h1, .ql-editor h2, .ql-editor h3 { color: ${templateData.style_settings.textColor}; }\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n        <div class=\"header\">\n            <h1>Hello {{first_name}}!</h1>\n        </div>\n        <div class=\"ql-editor\">\n            ${richTextContent}\n        </div>\n        <div style=\"text-align: center; padding-top: 20px; border-top: 1px solid #e5e7eb; margin-top: 20px; font-size: 12px; color: #6b7280;\">\n            <p>This email was sent to {{email}}</p>\n        </div>\n    </div>\n</body>\n</html>`;\n  };\n\n  const handleInputChange = (field, value) => {\n    setTemplateData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleStyleChange = (field, value) => {\n    setTemplateData(prev => ({\n      ...prev,\n      style_settings: {\n        ...prev.style_settings,\n        [field]: value\n      }\n    }));\n    \n    // Update HTML content with new styles\n    updateHTMLWithStyles();\n  };\n\n  const updateHTMLWithStyles = () => {\n    const { primaryColor, backgroundColor, textColor, font, borderRadius } = templateData.style_settings;\n    \n    // Update the HTML content with new styles\n    let updatedHTML = templateData.html_content;\n    \n    // Replace style values in the HTML\n    updatedHTML = updatedHTML.replace(/color: #[0-9A-Fa-f]{6}/g, `color: ${textColor}`);\n    updatedHTML = updatedHTML.replace(/background-color: #[0-9A-Fa-f]{6}/g, `background-color: ${backgroundColor}`);\n    updatedHTML = updatedHTML.replace(/font-family: [^;]*/g, `font-family: ${font}`);\n    updatedHTML = updatedHTML.replace(/border-radius: [^;]*/g, `border-radius: ${borderRadius}`);\n    \n    setTemplateData(prev => ({\n      ...prev,\n      html_content: updatedHTML\n    }));\n  };\n\n  const convertTextToHTML = () => {\n    const htmlContent = generateHTMLFromRichText(templateData.content);\n    setTemplateData(prev => ({\n      ...prev,\n      html_content: htmlContent,\n      is_html_enabled: true\n    }));\n    toast.success('Text converted to HTML template');\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!templateData.name.trim()) {\n        toast.error('Please enter a template name');\n        return;\n      }\n      \n      if (!templateData.subject.trim()) {\n        toast.error('Please enter a subject line');\n        return;\n      }\n\n      const saveData = {\n        ...templateData,\n        content: templateData.content || extractTextFromHTML(templateData.html_content)\n      };\n\n      await onSave(saveData);\n      toast.success(`Template ${template ? 'updated' : 'created'} successfully`);\n      onClose();\n    } catch (error) {\n      console.error('Error saving template:', error);\n      toast.error('Failed to save template');\n    }\n  };\n\n  const extractTextFromHTML = (html) => {\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = html;\n    return tempDiv.textContent || tempDiv.innerText || '';\n  };\n\n  const insertPersonalizationTag = (tag) => {\n    const textarea = document.querySelector(`textarea[data-field=\"html_content\"]`);\n    if (textarea) {\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      const text = textarea.value;\n      const before = text.substring(0, start);\n      const after = text.substring(end);\n      \n      const newText = before + `{{${tag}}}` + after;\n      setTemplateData(prev => ({\n        ...prev,\n        html_content: newText\n      }));\n      \n      // Set cursor position after inserted tag\n      setTimeout(() => {\n        textarea.focus();\n        textarea.setSelectionRange(start + tag.length + 4, start + tag.length + 4);\n      }, 0);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const personalizationTags = [\n    'first_name', 'last_name', 'company', 'job_title', 'industry', 'email'\n  ];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg w-full max-w-7xl h-full max-h-[90vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <div className=\"flex items-center space-x-3\">\n            <Mail className=\"w-6 h-6 text-blue-600\" />\n            <h2 className=\"text-2xl font-bold\">\n              {template ? 'Edit Template' : 'Create HTML Email Template'}\n            </h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-gray-100 rounded-lg\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 flex\">\n          {/* Left Panel - Form */}\n          <div className=\"w-1/2 p-6 border-r overflow-y-auto\">\n            {/* Basic Information */}\n            <div className=\"space-y-4 mb-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Template Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={templateData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter template name...\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Subject Line *\n                </label>\n                <input\n                  type=\"text\"\n                  value={templateData.subject}\n                  onChange={(e) => handleInputChange('subject', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter subject line...\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Template Type\n                </label>\n                <select\n                  value={templateData.type}\n                  onChange={(e) => handleInputChange('type', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"email\">Email Campaign</option>\n                  <option value=\"follow-up\">Follow-up</option>\n                  <option value=\"auto-response\">Auto Response</option>\n                </select>\n              </div>\n            </div>\n\n            {/* HTML Toggle */}\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <input\n                type=\"checkbox\"\n                checked={templateData.is_html_enabled}\n                onChange={(e) => handleInputChange('is_html_enabled', e.target.checked)}\n                className=\"w-4 h-4 text-blue-600 rounded\"\n              />\n              <label className=\"text-sm font-medium text-gray-700\">\n                Enable HTML Editor\n              </label>\n              {!templateData.is_html_enabled && templateData.content && (\n                <button\n                  onClick={convertTextToHTML}\n                  className=\"text-sm text-blue-600 hover:text-blue-800\"\n                >\n                  Convert to HTML\n                </button>\n              )}\n            </div>\n\n            {/* Content Editor */}\n            <div className=\"mb-6\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  {templateData.is_html_enabled ? 'Template Content' : 'Text Content'}\n                </label>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => setActiveTab('edit')}\n                    className={`px-3 py-1 text-sm rounded ${\n                      activeTab === 'edit'\n                        ? 'bg-blue-600 text-white'\n                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                    }`}\n                  >\n                    <Code className=\"w-4 h-4 inline mr-1\" />\n                    Edit\n                  </button>\n                  {templateData.is_html_enabled && (\n                    <button\n                      onClick={() => setShowPreview(!showPreview)}\n                      className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 hover:bg-gray-300 rounded\"\n                    >\n                      {showPreview ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {templateData.is_html_enabled ? (\n                <RichTextEditor\n                  value={templateData.html_content}\n                  onChange={(value) => {\n                    handleInputChange('html_content', value);\n                    // Auto-convert rich text to HTML\n                    updateHTMLWithStyles();\n                  }}\n                  onKeyDown={(e) => {\n                    // Allow typing and prevent modal close on Escape when editing\n                    if (e.key === 'Escape') {\n                      e.stopPropagation();\n                    }\n                  }}\n                  placeholder=\"Create your email template here. Use the toolbar above to format your content...\"\n                  className=\"border border-gray-300 rounded-lg min-h-[300px]\"\n                />\n              ) : (\n                <RichTextEditor\n                  value={templateData.content}\n                  onChange={(value) => handleInputChange('content', value)}\n                  onKeyDown={(e) => {\n                    // Allow typing and prevent modal close on Escape when editing\n                    if (e.key === 'Escape') {\n                      e.stopPropagation();\n                    }\n                  }}\n                  placeholder=\"Enter your email content here. Use the toolbar above to format your text...\"\n                  className=\"border border-gray-300 rounded-lg\"\n                />\n              )}\n            </div>\n\n            {/* Personalization Tags */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Personalization Tags\n              </label>\n              <div className=\"grid grid-cols-3 gap-2\">\n                {personalizationTags.map((tag) => (\n                  <button\n                    key={tag}\n                    onClick={() => insertPersonalizationTag(tag)}\n                    className=\"px-2 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded border\"\n                  >\n                    {`{{${tag}}}`}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Style Settings (for HTML templates) */}\n            {templateData.is_html_enabled && (\n              <div className=\"mb-6\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <Palette className=\"w-5 h-5 text-gray-600\" />\n                  <h3 className=\"text-lg font-medium text-gray-800\">Style Settings</h3>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm text-gray-600 mb-1\">Primary Color</label>\n                    <input\n                      type=\"color\"\n                      value={templateData.style_settings.primaryColor}\n                      onChange={(e) => handleStyleChange('primaryColor', e.target.value)}\n                      className=\"w-full h-10 border border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-600 mb-1\">Background Color</label>\n                    <input\n                      type=\"color\"\n                      value={templateData.style_settings.backgroundColor}\n                      onChange={(e) => handleStyleChange('backgroundColor', e.target.value)}\n                      className=\"w-full h-10 border border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-600 mb-1\">Text Color</label>\n                    <input\n                      type=\"color\"\n                      value={templateData.style_settings.textColor}\n                      onChange={(e) => handleStyleChange('textColor', e.target.value)}\n                      className=\"w-full h-10 border border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-600 mb-1\">Font Family</label>\n                    <select\n                      value={templateData.style_settings.font}\n                      onChange={(e) => handleStyleChange('font', e.target.value)}\n                      className=\"w-full px-2 py-2 border border-gray-300 rounded text-sm\"\n                    >\n                      <option value=\"Arial, sans-serif\">Arial</option>\n                      <option value=\"Helvetica, sans-serif\">Helvetica</option>\n                      <option value=\"Georgia, serif\">Georgia</option>\n                      <option value=\"Times New Roman, serif\">Times New Roman</option>\n                      <option value=\"Verdana, sans-serif\">Verdana</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Right Panel - Preview */}\n          <div className=\"w-1/2 p-6 bg-gray-50\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-800\">Preview</h3>\n              <div className=\"text-sm text-gray-600\">\n                {templateData.is_html_enabled ? 'HTML Preview' : 'Text Preview'}\n              </div>\n            </div>\n            \n            <div className=\"bg-white border border-gray-300 rounded-lg h-full overflow-auto\">\n              {templateData.is_html_enabled && showPreview ? (\n                <iframe\n                  srcDoc={htmlPreview}\n                  className=\"w-full h-full\"\n                  title=\"Email Preview\"\n                />\n              ) : (\n                <div className=\"p-4\">\n                  <div className=\"mb-4 p-3 bg-blue-50 rounded border-l-4 border-blue-400\">\n                    <strong>Subject:</strong> {templateData.subject || 'No subject'}\n                  </div>\n                  <div className=\"whitespace-pre-wrap text-sm text-gray-800\">\n                    {templateData.is_html_enabled \n                      ? extractTextFromHTML(templateData.html_content)\n                      : templateData.content || 'No content'\n                    }\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-6 border-t\">\n          <div className=\"text-sm text-gray-600\">\n            {templateData.is_html_enabled ? \n              'HTML template with rich formatting' : \n              'Plain text template'\n            }\n          </div>\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSave}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\n            >\n              <Save className=\"w-4 h-4\" />\n              <span>Save Template</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HTMLTemplateEditor;","import React, { useState, useEffect } from 'react';\nimport { Plus, Edit, Eye, FileText, Code, Mail, Palette } from 'lucide-react';\nimport { apiService } from '../services/api';\nimport toast from 'react-hot-toast';\nimport HTMLTemplateEditor from '../components/HTMLTemplateEditor';\n\nconst Templates = () => {\n  const [templates, setTemplates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [editingTemplate, setEditingTemplate] = useState(null);\n\n  useEffect(() => {\n    loadTemplates();\n  }, []);\n\n  const loadTemplates = async () => {\n    try {\n      const response = await apiService.getTemplates();\n      setTemplates(response.data);\n    } catch (error) {\n      toast.error('Failed to load templates');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveTemplate = async (templateData) => {\n    try {\n      if (editingTemplate) {\n        await apiService.updateTemplate(editingTemplate.id, templateData);\n        toast.success('Template updated successfully');\n      } else {\n        await apiService.createTemplate(templateData);\n        toast.success('Template created successfully');\n      }\n      setShowModal(false);\n      setEditingTemplate(null);\n      loadTemplates();\n    } catch (error) {\n      toast.error('Failed to save template');\n    }\n  };\n\n  const handleEditTemplate = (template) => {\n    setEditingTemplate(template);\n    setShowModal(true);\n  };\n\n  const handleNewTemplate = () => {\n    setEditingTemplate(null);\n    setShowModal(true);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold text-secondary-900\">Email Templates</h1>\n        <button\n          onClick={handleNewTemplate}\n          className=\"btn btn-primary\"\n        >\n          <Plus className=\"h-4 w-4 mr-2\" />\n          New Template\n        </button>\n      </div>\n\n      {/* Template Types Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-secondary-900\">Initial</h3>\n                <p className=\"text-sm text-secondary-600\">First contact templates</p>\n              </div>\n              <div className=\"h-8 w-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <FileText className=\"h-4 w-4 text-blue-600\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-secondary-900\">Follow-up</h3>\n                <p className=\"text-sm text-secondary-600\">Sequence templates</p>\n              </div>\n              <div className=\"h-8 w-8 bg-green-100 rounded-full flex items-center justify-center\">\n                <FileText className=\"h-4 w-4 text-green-600\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-secondary-900\">Auto-response</h3>\n                <p className=\"text-sm text-secondary-600\">AI-generated replies</p>\n              </div>\n              <div className=\"h-8 w-8 bg-purple-100 rounded-full flex items-center justify-center\">\n                <FileText className=\"h-4 w-4 text-purple-600\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Templates Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {templates.map((template) => (\n          <TemplateCard\n            key={template.id}\n            template={template}\n            onEdit={handleEditTemplate}\n          />\n        ))}\n      </div>\n\n      {/* Template Modal */}\n      <HTMLTemplateEditor\n        isOpen={showModal}\n        template={editingTemplate}\n        onClose={() => {\n          setShowModal(false);\n          setEditingTemplate(null);\n        }}\n        onSave={handleSaveTemplate}\n      />\n    </div>\n  );\n};\n\nconst TemplateCard = ({ template, onEdit }) => {\n  const getTypeColor = (type) => {\n    switch (type) {\n      case 'initial': return 'bg-blue-100 text-blue-800';\n      case 'follow_up': return 'bg-green-100 text-green-800';\n      case 'auto_response': return 'bg-purple-100 text-purple-800';\n      case 'email': return 'bg-indigo-100 text-indigo-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"text-lg font-semibold text-secondary-900\">{template.name}</h3>\n            {template.is_html_enabled && (\n              <div className=\"flex items-center space-x-1\">\n                <Code className=\"h-4 w-4 text-purple-600\" />\n                <span className=\"text-xs text-purple-600\">HTML</span>\n              </div>\n            )}\n          </div>\n          <span className={`px-2 py-1 text-xs rounded-full ${getTypeColor(template.type)}`}>\n            {template.type?.replace('_', ' ') || 'Email'}\n          </span>\n        </div>\n        <p className=\"text-sm text-secondary-600 mb-3\">{template.subject}</p>\n        <div className=\"text-sm text-secondary-500 mb-4\">\n          <div className=\"max-h-20 overflow-hidden\">\n            {template.content ? \n              template.content.substring(0, 100) + (template.content.length > 100 ? '...' : '') :\n              'No content preview'\n            }\n          </div>\n        </div>\n        <div className=\"flex justify-between items-center\">\n          <div className=\"text-xs text-secondary-400 flex items-center space-x-2\">\n            <span>{template.created_at ? new Date(template.created_at).toLocaleDateString() : 'Unknown date'}</span>\n            {template.style_settings?.primaryColor && (\n              <div className=\"flex items-center space-x-1\">\n                <Palette className=\"h-3 w-3\" />\n                <div \n                  className=\"w-3 h-3 rounded-full border\" \n                  style={{ backgroundColor: template.style_settings.primaryColor }}\n                ></div>\n              </div>\n            )}\n          </div>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => onEdit(template)}\n              className=\"p-1 text-secondary-400 hover:text-primary-600 transition-colors\"\n              title=\"Edit Template\"\n            >\n              <Edit className=\"h-4 w-4\" />\n            </button>\n            <button \n              className=\"p-1 text-secondary-400 hover:text-primary-600 transition-colors\"\n              title=\"Preview Template\"\n            >\n              <Eye className=\"h-4 w-4\" />\n            </button>\n            {template.is_html_enabled && (\n              <button \n                className=\"p-1 text-secondary-400 hover:text-primary-600 transition-colors\"\n                title=\"HTML Template\"\n              >\n                <Mail className=\"h-4 w-4\" />\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Templates;","import { useEffect } from 'react';\n\nconst useEscapeKey = (callback, isEnabled = true) => {\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const handleEscapeKey = (event) => {\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        event.stopPropagation();\n        callback();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapeKey);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKey);\n    };\n  }, [callback, isEnabled]);\n};\n\nexport default useEscapeKey;"],"names":["API_BASE_URL","process","api","axios","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","token","localStorage","getItem","error","Promise","reject","response","async","_error$response","_error$response2","data","message","status","refreshResponse","post","access_token","setItem","originalRequest","refreshError","removeItem","window","location","href","apiService","healthCheck","get","getProspects","skip","arguments","length","undefined","limit","createProspect","prospect","uploadProspects","file","formData","FormData","append","getTemplates","createTemplate","template","getTemplate","id","updateTemplate","put","getCampaigns","createCampaign","campaign","getCampaign","sendCampaign","sendRequest","finalSendRequest","send_immediately","email_provider_id","max_emails","schedule_type","start_time","follow_up_enabled","follow_up_intervals","follow_up_templates","getIntents","createIntent","intent","getIntent","updateIntent","deleteIntent","delete","getCampaignAnalytics","campaignId","getLists","createList","list","getList","updateList","deleteList","addProspectsToList","listId","prospectIds","prospect_ids","removeProspectsFromList","startEmailProcessing","stopEmailProcessing","getProcessingStatus","getProcessingAnalytics","testIntentClassification","testResponseGeneration","getThreads","getThread","getThreadByProspect","prospectId","addMessageToThread","threadId","messageData","getEmailProviders","createEmailProvider","provider","updateEmailProvider","deleteEmailProvider","setDefaultEmailProvider","testEmailProvider","getFollowUpDashboard","getImapScanStatus","getImapLogs","hours","getProspectResponses","days","analyzeProspectThread","forceStopFollowUp","restartFollowUp","getFollowUpHealthCheck","startFollowUpEngine","stopFollowUpEngine","getFollowUpEngineStatus","getFollowUpStatistics","processEmailResponse","responseData","RichTextEditor","forwardRef","_ref","ref","value","onChange","placeholder","onKeyDown","className","props","quillRef","useRef","useEffect","current","editor","getEditor","handleKeyDown","event","root","addEventListener","removeEventListener","_jsx","children","ReactQuill","el","theme","modules","toolbar","formats","style","height","marginBottom","displayName","isOpen","onClose","onSave","useEscapeKey","activeTab","setActiveTab","useState","showPreview","setShowPreview","templateData","setTemplateData","name","subject","content","html_content","type","is_html_enabled","style_settings","primaryColor","backgroundColor","textColor","font","borderRadius","htmlPreview","setHtmlPreview","_template$style_setti","_template$style_setti2","_template$style_setti3","_template$style_setti4","_template$style_setti5","generateHTMLFromRichText","getDefaultHTMLTemplate","richTextContent","handleInputChange","field","prev","handleStyleChange","updateHTMLWithStyles","updatedHTML","replace","extractTextFromHTML","html","tempDiv","document","createElement","innerHTML","textContent","innerText","_jsxs","Mail","onClick","X","e","target","checked","convertTextToHTML","htmlContent","toast","success","Code","EyeOff","Eye","key","stopPropagation","map","tag","textarea","querySelector","start","selectionStart","end","selectionEnd","text","before","substring","after","newText","setTimeout","focus","setSelectionRange","insertPersonalizationTag","Palette","srcDoc","title","trim","saveData","Save","TemplateCard","_template$type","onEdit","getTypeColor","created_at","Date","toLocaleDateString","Edit","Templates","templates","setTemplates","loading","setLoading","showModal","setShowModal","editingTemplate","setEditingTemplate","loadTemplates","handleEditTemplate","handleNewTemplate","Plus","FileText","HTMLTemplateEditor","callback","isEnabled","handleEscapeKey","preventDefault"],"sourceRoot":""}